// hue. Available color palettes: https://material.io/design/color/
@use '~@angular/material' as mat;

$plt-primary: mat.define-palette(mat.$indigo-palette);
$plt-accent: mat.define-palette(mat.$teal-palette, A400, A100, A200);

$plt-warn: mat.define-palette(mat.$red-palette);

$plt-theme: mat.define-light-theme((
  color: (
    primary: $plt-primary,
    accent: $plt-accent,
    warn: $plt-warn,
  )
));

$plt-background: map-get($plt-theme, background);
$plt-foreground: map-get($plt-theme, foreground);
$plt-primary-contrast: map-get($plt-primary, contrast);
$plt-accent-contrast: map-get($plt-accent, contrast);
$plt-warn-contrast: map-get($plt-warn, contrast);

@mixin main() {
    @include mat.core();
    @include mat.all-component-themes($plt-theme);

    $p-keys: 50, 100, 200, 300, 400, 500, 600, 700, 800, 900;
    $a-keys: (100: A100, 200: A200, 400: A400, 700: A700);

    :root {
      @each $key in $p-keys {
        --p-#{$key}: #{map-get($plt-primary, $key)};
      }


      @each $key, $value in $a-keys {
        --a-#{$key}: #{map-get($plt-accent, $value)};
      }

      @each $key in $p-keys {
        --w-#{$key}: #{map-get($plt-warn, $key)};
      }

      @each $key, $value in $plt-background {
        --b-#{$key}: #{$value};
      }

      @each $key, $value in $plt-foreground {
        --f-#{$key}: #{$value};
      }

      @each $key in $p-keys {
        --pc-#{$key}: #{map-get($plt-primary-contrast, $key)};
      }

      @each $key, $value in $a-keys {
        --ac-#{$key}: #{map-get($plt-accent-contrast, $value)};
      }

      @each $key in $p-keys {
        --wc-#{$key}: #{map-get($plt-warn-contrast, $key)};
      }
    }
}